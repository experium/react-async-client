{
  "name": "react-async-client",
  "main": "lib/index.js",
  "module": "./lib/index.js",
  "author": "Vyacheslav Salakhutdinov <megazoll@gmail.com>",
  "version": "0.8.0",
  "devDependencies": {
    "babel-cli": "^6.24.0",
    "babel-eslint": "^7.2.1",
    "babel-jest": "^19.0.0",
    "babel-loader": "^6.4.1",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-polyfill": "^6.23.0",
    "babel-preset-es2015": "^6.24.0",
    "babel-preset-react": "^6.23.0",
    "babel-preset-stage-2": "^6.22.0",
    "deep-equal": "^1.0.1",
    "enzyme": "^2.8.0",
    "eslint": "^3.18.0",
    "eslint-config-react-app": "^0.6.2",
    "eslint-loader": "^1.7.1",
    "eslint-plugin-flowtype": "^2.30.4",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^4.0.0",
    "eslint-plugin-react": "^6.10.3",
    "html-webpack-plugin": "^2.28.0",
    "jest": "^19.0.2",
    "prop-types": "^15.5.10",
    "ramda": "^0.25",
    "react": "^15.6.1",
    "react-addons-test-utils": "^15.6.0",
    "react-dom": "^15.6.1",
    "react-redux": "^5.0.6",
    "react-test-renderer": "^15.6.1",
    "redux": "^3.7.2",
    "redux-mock-store": "^1.2.3",
    "redux-saga": "^0.16.0",
    "rimraf": "^2.6.1",
    "webpack": "^2.3.2",
    "webpack-dev-server": "^2.4.2"
  },
  "peerDependencies": {
    "prop-types": "^15.5.0",
    "ramda": ">=0.25",
    "react": ">=15.4.2",
    "react-redux": ">=5.0.3",
    "redux": ">=3.6.0",
    "redux-saga": ">=0.15.3"
  },
  "scripts": {
    "clean": "rimraf lib dist",
    "lint": "eslint src -f checkstyle -o reports/eslint.xml",
    "lint:boil": "npm run lint -- --max-warnings 0",
    "prebuild": "npm run clean",
    "build": "webpack && babel src --out-dir lib",
    "test": "jest",
    "test:watch": "npm test -- --watch",
    "publish-npm": "npm version 0.1.$BUILD_NUMBER && npm publish"
  },
  "jest": {
    "testPathIgnorePatterns": [
      "/node_modules/",
      "/__tests__/test-utils/"
    ],
    "collectCoverage": true,
    "coverageDirectory": "reports",
    "coverageReporters": [
      "cobertura"
    ]
  }
}
